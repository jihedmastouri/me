---
import { type CollectionEntry } from 'astro:content';
import { slide } from 'astro:transitions';

import { SITE_TITLE, SITE_DESCRIPTION, CATEGS } from 'src/consts';
import { tags } from 'src/utils';

import BaseHead from '@components/BaseHead.astro';
import Header from '@components/Header.astro';
import Footer from '@components/Footer.astro';
import FormattedDate from '@components/FormattedDate.astro';
import Icon from '@components/Icon.astro';
import Shield from '@components/Shield.astro';
import Paginator from '@components/Paginator.astro';
import Card from '@components/Card.astro';
import WeirdButton from '@components/WeirdButton.astro';

type colEntry = CollectionEntry<'blog'>;

const { selectedTag, selectedCateg, page, basePath } = Astro.props;

---

<!doctype html>
<html lang="en">
  <head>
    <BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
  </head>
  <body>
    <Header />
    <div class="mx-auto box-border grid max-w-screen-xl px-2 md:grid-cols-4 grid-cols-1">
      <main class="px-1 col-span-1 md:col-span-3 order-2 md:order-1">
        <section>
          <ul>
            {
              page.data.map((post: colEntry) => (
                <>
                  <li
                    class="group my-3 box-border rounded-md p-2
                            hover:bg-slate-100 dark:hover:bg-slate-700"
                  >
                    <a href={`/blog/${post.slug}/`} class="h-full w-full">
                      <h3 class="my-0 text-3xl group-hover:text-sky-500">
                        {post.data.title}
                      </h3>
                      <p class="mb-3 text-sm text-gray-500">
                        <Icon
                          icon="date"
                          class="m-0 inline h-5 w-5 fill-gray-500"
                        />
                        Created: <FormattedDate date={post.data.pubDate} />
                        {post.data.updatedDate && (
                          <span>
                            {' '}
                            | Last update:{' '}
                            <FormattedDate date={post.data.updatedDate} />
                          </span>
                        )}
                      </p>
                      <p>{post.data.description}</p>
                    </a>
                  </li>
                  <hr class="my-2 h-0 opacity-50" />
                </>
              ))
            }
          </ul>
        </section>
        {
        page.totalPages > 1 && (
          <section class="mt-4">
            <Paginator
              length={page.lastPage}
              currentUrl={page.url.current}
              currentPage={page.currentPage}
              firstUrl={`${basePath}`}
              prevUrl={page.url.prev}
              nextUrl={page.url.next}
              lastUrl={`${basePath}/${page.lastPage}`}
            />
          </section>
          )
        }
      </main>
        <side
          class="col-span-1 md:order-2 order-1" >
          <Card>
            {
              (selectedCateg || selectedTag) && (
                <>
                  <h3 class="text-2xl text-center py-3" >
                    {`${selectedCateg ? selectedCateg : '' }${selectedTag ? '#' + selectedTag :''}`}
                  </h3>
                  <hr />
                </>
              )
            }
            <h4 class="my-2">Categories:</h4>
            <div class="flex flex-wrap items-center justify-center gap-2 text-center">
              {
                CATEGS.map((categ) => (
                  <WeirdButton
                    href={`/blog/categs/${categ}`}
                    text={categ}
                    condition={selectedCateg === categ}
                  />
                ))
              }
            </div>
            <h4 class="mb-2 mt-3"> {selectedTag? 'Choose Another Tag:' : selectedCateg ? 'Filter by Tag:' : 'Tags:' } </h4>
            <div class="flex flex-wrap text-xs">
              {tags.map((tag) => (
                <a
                  href={`/blog${ selectedCateg ? '/categs/' + selectedCateg : '' }/tags/${tag}`}
                  class="hover:opacity-90 mb-3 opacity-100"
                >
                  <Shield text={'#' + tag} />
                </a>
              ))}
            </div>
          </Card>
          {
            (selectedCateg || selectedTag) && (
              <p class="text-sm mt-4 text-center">
                ðŸ‘ˆ <a class="hover:text-sky-500 hover:underline" href="/blog">
                  Clear/Go back to Blog
                </a>
              </p>
            )
          }
      </side>
    </div>
    <Footer />
  </body>
</html>
