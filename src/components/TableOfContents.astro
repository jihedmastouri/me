---
import type { MarkdownHeading } from 'astro';

type Props = {
  headings: MarkdownHeading[];
};

type HeadingWithSubheadings = MarkdownHeading & {
  subheadings: MarkdownHeading[];
};

const { headings } = Astro.props;
const headingsNames = headings.map((heading) => heading.text);

const grouppedHeadings = headings.reduce((array, heading) => {
  if (heading.depth === 2) {
    array.push({ ...heading, subheadings: [] });
  } else if (heading.depth === 3) {
    array.at(-1)?.subheadings.push(heading);
  }
  return array;
}, [] as HeadingWithSubheadings[]);
---

<nav
  id="table-of-contents"
  aria-label="Table Of Contents"
  class="sticky top-1 pt-4"
>
  <ol>
    {
      grouppedHeadings.map((h) => (
        <li class="py-1 leading-8 group">
          <a href={`#${h.slug}`} class="group-hover:text-sky-400">{h.text}</a>
          {h.subheadings.length > 0 && (
            <ol class="ml-2 border-l border-double border-zinc-200 pl-2 group-hover:border-sky-400">
              {h.subheadings.map((sub) => (
                <li class="hover:text-sky-400">
                  <a href={`#${sub.slug}`}>{sub.text}</a>
                </li>
              ))}
            </ol>
          )}
        </li>
      ))
    }
  </ol>
</nav>

<script>
run();

function run(){
  const sectionHeadings = document.querySelectorAll(
    'article h2, article h3'
  );

  if (window.location.hash) {
    highlightHeader(window.location.hash);
  } else if (isInViewport(sectionHeadings[0])) {
    highlightHeader(`#${sectionHeadings[0].id}`);
  }

  document.querySelectorAll('#table-of-contents a[href^="#"]').forEach(anchor => {
      const selector = anchor.getAttribute('href');
      anchor.addEventListener('click', function (e) {
          e.preventDefault();
          document.querySelector(selector)!.scrollIntoView({
              behavior: 'smooth'
          });
      });
  });
}

window.addEventListener('astro:after-swap', () => {
  run();
});

window.addEventListener('hashchange', () => {
  const path = window.location.hash;
  highlightHeader(path);
});

window.addEventListener('scroll', () => {
  const sectionHeadings = document.querySelectorAll(
    'article h2, article h3'
  );

  for (const heading of sectionHeadings) {
    if (isInViewport(heading)) {
      const headingFragment = `#${heading.id}`;
      highlightHeader(headingFragment);
      break;
    }
  }
});

function isInViewport(element) {
  const rect = element.getBoundingClientRect();
  return rect.top - 5 <= window.visualViewport!.height && rect.top > 0;
}

function highlightHeader(headerId) {
  if (!headerId) return;

  const tocItem = document.querySelector(`a[href="${headerId}"]`);
  const previouslyActivatedItem = document.querySelector('.text-sky-400');

  if (previouslyActivatedItem) {
    previouslyActivatedItem.classList.remove('text-sky-400');
  }

  tocItem && tocItem.classList.add('text-sky-400');
}
</script>
